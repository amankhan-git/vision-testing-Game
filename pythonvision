import tkinter as tk
from tkinter import messagebox
from PIL import Image, ImageTk
import random
import time

class VisionTestingGame:
    def __init__(self, root):
        self.root = root
        self.root.title("Advanced Vision Testing Game")
        self.root.geometry("900x650")
        self.score = 0
        self.tests_taken = {"Acuity": False, "Color": False, "Peripheral": False}
        self.bg_image = None
        self.load_background()
        self.start_menu()

    def load_background(self):
        try:
            bg = Image.open("bg.png").resize((900, 650))
            self.bg_image = ImageTk.PhotoImage(bg)
        except:
            self.bg_image = None

    def show_background(self):
        if self.bg_image:
            bg_label = tk.Label(self.root, image=self.bg_image)
            bg_label.place(x=0, y=0, relwidth=1, relheight=1)

    def clear_screen(self):
        for widget in self.root.winfo_children():
            widget.destroy()
        self.show_background()

    def start_menu(self):
        self.clear_screen()
        title = tk.Label(self.root, text="Vision Testing Game", font=("Arial", 30, "bold"), fg="white", bg="#333")
        title.pack(pady=20)

        instructions = tk.Label(self.root, text="Choose a test to begin:", font=("Arial", 16), bg="#333", fg="white")
        instructions.pack(pady=10)

        btn1 = tk.Button(self.root, text="Visual Acuity Test", font=("Arial", 14), bg="#4CAF50", fg="white", width=25, command=self.visual_acuity_test)
        btn2 = tk.Button(self.root, text="Color Blindness Test", font=("Arial", 14), bg="#2196F3", fg="white", width=25, command=self.color_blindness_test)
        btn3 = tk.Button(self.root, text="Peripheral Vision Test", font=("Arial", 14), bg="#FF5722", fg="white", width=25, command=self.peripheral_test)
        btn4 = tk.Button(self.root, text="Show Summary", font=("Arial", 14), bg="#9C27B0", fg="white", width=25, command=self.show_summary)

        for btn in [btn1, btn2, btn3, btn4]:
            btn.pack(pady=10)

    # ---------------- Visual Acuity Test ----------------
    def visual_acuity_test(self):
        self.clear_screen()
        tk.Label(self.root, text="Visual Acuity Test\nType the letter shown below", font=("Arial", 20), bg="#333", fg="white").pack(pady=10)
        self.letter = random.choice("ABCDEFGHIJKLMNOPQRSTUVWXYZ")
        self.size = random.randint(40, 100)
        tk.Label(self.root, text=self.letter, font=("Arial", self.size)).pack(pady=20)

        self.entry = tk.Entry(self.root, font=("Arial", 18))
        self.entry.pack()

        tk.Button(self.root, text="Submit", font=("Arial", 14), bg="black", fg="white", command=self.check_acuity).pack(pady=10)

    def check_acuity(self):
        guess = self.entry.get().strip().upper()
        if guess == self.letter:
            self.score += 10
            messagebox.showinfo("Correct", "Great job!")
        else:
            messagebox.showerror("Incorrect", f"Oops! The correct letter was {self.letter}")
        self.tests_taken["Acuity"] = True
        self.start_menu()

    # ---------------- Color Blindness Test ----------------
    def color_blindness_test(self):
        self.clear_screen()
        tk.Label(self.root, text="Color Blindness Test\nIdentify the number in the image", font=("Arial", 20), bg="#333", fg="white").pack(pady=10)

        self.plates = {
            "plate1.png": "12",
            "plate2.png": "8",
            "plate3.png": "29"
        }
        self.current_plate = random.choice(list(self.plates.keys()))

        try:
            img = Image.open(self.current_plate).resize((300, 300))
            self.tk_img = ImageTk.PhotoImage(img)
            tk.Label(self.root, image=self.tk_img).pack(pady=10)
        except FileNotFoundError:
            messagebox.showerror("Missing", f"Image '{self.current_plate}' not found!")
            self.start_menu()
            return

        self.entry = tk.Entry(self.root, font=("Arial", 18))
        self.entry.pack()

        tk.Button(self.root, text="Submit", font=("Arial", 14), bg="black", fg="white", command=self.check_color_blindness).pack(pady=10)

    def check_color_blindness(self):
        ans = self.entry.get().strip()
        if ans == self.plates[self.current_plate]:
            self.score += 10
            messagebox.showinfo("Correct", "You answered correctly!")
        else:
            messagebox.showwarning("Incorrect", "You may have a color vision issue.")
        self.tests_taken["Color"] = True
        self.start_menu()

    # ---------------- Peripheral Vision Test ----------------
    def peripheral_test(self):
        self.clear_screen()
        tk.Label(self.root, text="Peripheral Vision Test\nPress SPACE when you see a red circle", font=("Arial", 20), bg="#333", fg="white").pack(pady=10)

        self.canvas = tk.Canvas(self.root, width=700, height=400, bg='white')
        self.canvas.pack(pady=20)

        self.root.after(2000, self.flash_object)

    def flash_object(self):
        self.canvas.delete("all")
        x = random.randint(50, 650)
        y = random.randint(50, 350)
        self.canvas.create_oval(x, y, x+30, y+30, fill="red", tags="circle")
        self.start_time = time.time()
        self.root.bind("<space>", self.peripheral_response)

    def peripheral_response(self, event):
        reaction_time = round(time.time() - self.start_time, 2)
        self.root.unbind("<space>")
        if reaction_time <= 1.5:
            self.score += 10
            messagebox.showinfo("Good!", f"Reaction Time: {reaction_time} seconds")
        else:
            messagebox.showwarning("Too slow!", f"Your Reaction Time: {reaction_time} seconds")
        self.tests_taken["Peripheral"] = True
        self.start_menu()

    # ---------------- Summary ----------------
    def show_summary(self):
        self.clear_screen()
        tk.Label(self.root, text="Game Summary", font=("Arial", 24, "bold"), bg="#222", fg="white").pack(pady=20)
        tk.Label(self.root, text=f"Total Score: {self.score}", font=("Arial", 20), fg="#00FF88").pack(pady=10)

        for test, taken in self.tests_taken.items():
            status = "✔ Done" if taken else "❌ Not Taken"
            color = "green" if taken else "red"
            tk.Label(self.root, text=f"{test} Test: {status}", font=("Arial", 16), fg=color).pack()

        tk.Button(self.root, text="Back to Main Menu", font=("Arial", 14), command=self.start_menu).pack(pady=20)
        tk.Button(self.root, text="Reset Game", font=("Arial", 14), command=self.reset_game).pack()

    def reset_game(self):
        self.score = 0
        self.tests_taken = {"Acuity": False, "Color": False, "Peripheral": False}
        self.start_menu()


# ---------------- Run Game ----------------
if __name__ == "__main__":
    root = tk.Tk()
    app = VisionTestingGame(root)
    root.mainloop()






